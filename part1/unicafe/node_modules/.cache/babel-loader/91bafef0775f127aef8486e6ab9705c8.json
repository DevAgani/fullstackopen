{"ast":null,"code":"var _jsxFileName = \"/Users/aganinyakundi/Documents/Development/ReactJS/fullstackopen2020/part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), good > 0 || bad > 0 || neutral > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, \"Good : \", good), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, \"Neutral : \", neutral), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, \"Bad : \", bad), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, \"All : \", good + neutral + bad), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \"Average : \", (good * 1 + bad * -1) / (good + neutral + bad), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"Positive :\", good / (good + neutral + bad) * 100, \"% \")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"No feedback given\"));\n};\n\nconst Button = ({\n  text,\n  handleClick\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 41\n  }\n}, text);\n\nconst App = () => {\n  //save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"Give feedback\"), /*#__PURE__*/React.createElement(Button, {\n    text: \"good\",\n    handleClick: () => handleGood(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"neutral\",\n    handleClick: () => handleNeutral(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"bad\",\n    handleClick: () => handleBad(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/aganinyakundi/Documents/Development/ReactJS/fullstackopen2020/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Statistics","good","neutral","bad","Button","text","handleClick","App","setGood","setNeutral","setBad","handleGood","handleNeutral","handleBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Statistics = ({good, neutral,bad}) => {\n  return (\n    <>\n      <p>Statistics</p>\n\n      { good >0 || bad >0 || neutral >0 ?\n      <>\n          <p>Good : {good}</p>\n          <p>Neutral : {neutral}</p>\n          <p>Bad : {bad}</p>\n          <p>All : {good + neutral + bad}</p>\n          <p>Average : { ((good * 1 + bad * -1) / (good + neutral + bad))} </p>\n          <p>Positive :{ (good / (good + neutral + bad)) * 100}% </p>\n      </>\n      :\n      <p>No feedback given</p>}\n    </>\n  )\n}\n\nconst Button = ({text, handleClick}) => <button onClick={handleClick}>{text}</button>\n\n\nconst App = () => {\n  //save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = () => {\n    setGood(good + 1)\n  }\n  const handleNeutral = () => {\n    setNeutral(neutral + 1)\n  }\n  const handleBad = () => {\n    setBad(bad + 1)\n  }\n\n  return (\n    <>\n    <p>Give feedback</p>\n    <Button text='good' handleClick={()=> handleGood()}/>\n    <Button text='neutral' handleClick={()=> handleNeutral()}/>\n    <Button text='bad' handleClick={()=> handleBad()}/>\n      <Statistics good={good} bad={bad} neutral={neutral}/>\n\n    </>\n  )\n}\n\nReactDOM.render(<App/>,document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}