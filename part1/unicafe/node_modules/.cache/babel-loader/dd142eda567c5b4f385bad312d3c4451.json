{"ast":null,"code":"var _jsxFileName = \"/Users/aganinyakundi/Documents/Development/ReactJS/fullstackopen2020/part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), good > 0 || bad > 0 || neutral > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Statistic, {\n    text: \"good\",\n    value: good,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"neutral\",\n    value: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"bad\",\n    value: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"all\",\n    value: good + neutral + bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"average\",\n    value: (good * 1 + bad * -1) / (good + neutral + bad),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"positive\",\n    value: `${good / (good + neutral + bad) * 100}%`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"No feedback given\"));\n};\n\nconst Button = ({\n  text,\n  handleClick\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 41\n  }\n}, text);\n\nconst Statistic = ({\n  text,\n  value\n}) => /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 38\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 42\n  }\n}, text), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 57\n  }\n}, value));\n\nconst App = () => {\n  //save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"Give feedback\"), /*#__PURE__*/React.createElement(Button, {\n    text: \"good\",\n    handleClick: () => handleGood(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"neutral\",\n    handleClick: () => handleNeutral(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"bad\",\n    handleClick: () => handleBad(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/aganinyakundi/Documents/Development/ReactJS/fullstackopen2020/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Statistics","good","neutral","bad","Button","text","handleClick","Statistic","value","App","setGood","setNeutral","setBad","handleGood","handleNeutral","handleBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Statistics = ({good, neutral,bad}) => {\n  return (\n    <>\n      <p>Statistics</p>\n\n      { good >0 || bad >0 || neutral >0 ?\n      <>\n      <table>\n      <Statistic text=\"good\" value={good}/>\n          <Statistic text=\"neutral\" value={neutral}/>\n          <Statistic text=\"bad\" value={bad}/>\n          <Statistic text=\"all\" value={good + neutral + bad}/>\n          <Statistic text=\"average\" value={ ((good * 1 + bad * -1) / (good + neutral + bad))} />\n          <Statistic text=\"positive\" value={ `${(good / (good + neutral + bad)) * 100 }%` }/>\n      </table>\n      </>\n      :\n      <p>No feedback given</p>}\n    </>\n  )\n}\n\nconst Button = ({text, handleClick}) => <button onClick={handleClick}>{text}</button>\nconst Statistic = ({text, value}) => <tr><td>{text}</td><td>{value}</td></tr>\n\n\nconst App = () => {\n  //save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = () => {\n    setGood(good + 1)\n  }\n  const handleNeutral = () => {\n    setNeutral(neutral + 1)\n  }\n  const handleBad = () => {\n    setBad(bad + 1)\n  }\n\n  return (\n    <>\n    <p>Give feedback</p>\n    <Button text='good' handleClick={()=> handleGood()}/>\n    <Button text='neutral' handleClick={()=> handleNeutral()}/>\n    <Button text='bad' handleClick={()=> handleBad()}/>\n      <Statistics good={good} bad={bad} neutral={neutral}/>\n\n    </>\n  )\n}\n\nReactDOM.render(<App/>,document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}