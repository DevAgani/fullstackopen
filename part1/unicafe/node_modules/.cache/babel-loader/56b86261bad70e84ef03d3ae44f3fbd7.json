{"ast":null,"code":"var _jsxFileName = \"/Users/aganinyakundi/Documents/Development/ReactJS/fullstackopen2020/part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), \"if (\", good || bad || neutral, \") \", /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Good : \", good), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Neutral : \", neutral), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Bad : \", bad), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"All : \", good + neutral + bad), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Average : \", (good * 1 + bad * -1) / (good + neutral + bad), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Positive :\", good / (good + neutral + bad) * 100, \"% \")), \"else\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, \"No feedback given\"));\n};\n\nconst App = () => {\n  //save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, \"Give feedback\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleGood(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleNeutral(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleBad(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Bad\"), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/aganinyakundi/Documents/Development/ReactJS/fullstackopen2020/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Statistics","good","neutral","bad","App","setGood","setNeutral","setBad","handleGood","handleNeutral","handleBad","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAeC,EAAAA;AAAf,CAAD,KAAyB;AAC1C,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,UAEOF,IAAI,IAAKE,GAAT,IAAgBD,OAFvB,qBAGI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWD,IAAX,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcC,OAAd,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUC,GAAV,CAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUF,IAAI,GAAGC,OAAP,GAAiBC,GAA3B,CAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgB,CAACF,IAAI,GAAG,CAAP,GAAWE,GAAG,GAAG,CAAC,CAAnB,KAAyBF,IAAI,GAAGC,OAAP,GAAiBC,GAA1C,CAAhB,MALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgBF,IAAI,IAAIA,IAAI,GAAGC,OAAP,GAAiBC,GAArB,CAAL,GAAkC,GAAjD,OANA,CAHJ,uBAYM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAZN,CADF;AAkBD,CAnBD;;AAqBA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUI,UAAV,IAAwBR,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACK,GAAD,EAAMI,MAAN,IAAgBT,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMU,UAAU,GAAG,MAAM;AACvBH,IAAAA,OAAO,CAACJ,IAAI,GAAG,CAAR,CAAP;AACD,GAFD;;AAGA,QAAMQ,aAAa,GAAG,MAAM;AAC1BH,IAAAA,UAAU,CAACJ,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAGA,QAAMQ,SAAS,GAAG,MAAM;AACtBH,IAAAA,MAAM,CAACJ,GAAG,GAAG,CAAP,CAAN;AACD,GAFD;;AAIA,sBACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAKK,UAAU,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAKC,aAAa,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAQ,IAAA,OAAO,EAAE,MAAKC,SAAS,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,eAKE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAET,IAAlB;AAAwB,IAAA,GAAG,EAAEE,GAA7B;AAAkC,IAAA,OAAO,EAAED,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAUD,CA1BD;;AA4BAH,QAAQ,CAACY,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAuBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAvB","sourcesContent":["import React,{useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Statistics = ({good, neutral,bad}) => {\n  return (\n    <>\n      <p>Statistics</p>\n      if ({good  || bad || neutral}) {\n        <>\n        <p>Good : {good}</p>\n        <p>Neutral : {neutral}</p>\n        <p>Bad : {bad}</p>\n        <p>All : {good + neutral + bad}</p>\n        <p>Average : { ((good * 1 + bad * -1) / (good + neutral + bad))} </p>\n        <p>Positive :{ (good / (good + neutral + bad)) * 100}% </p>\n      </>\n      }else{\n          <p>No feedback given</p>\n      }\n\n    </>\n  )\n}\n\nconst App = () => {\n  //save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = () => {\n    setGood(good + 1)\n  }\n  const handleNeutral = () => {\n    setNeutral(neutral + 1)\n  }\n  const handleBad = () => {\n    setBad(bad + 1)\n  }\n\n  return (\n    <>\n    <p>Give feedback</p>\n      <button onClick={()=> handleGood()}>Good</button>\n      <button onClick={()=> handleNeutral()}>Neutral</button>\n      <button onClick={()=> handleBad()}>Bad</button>\n      <Statistics good={good} bad={bad} neutral={neutral}/>\n\n    </>\n  )\n}\n\nReactDOM.render(<App/>,document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}